<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="FlowHub.Main.Views.Mobile.Debts.UpSertDebtPageM"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:mct="clr-namespace:CommunityToolkit.Maui.Views;assembly=CommunityToolkit.Maui"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:validation="clr-namespace:InputKit.Shared.Validations;assembly=InputKit.Maui"  
             xmlns:material="clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material"
             xmlns:input="clr-namespace:InputKit.Shared.Controls;assembly=InputKit.Maui"
             xmlns:models="clr-namespace:FlowHub.Models;assembly=FlowHub.Models"
             xmlns:viewModels="clr-namespace:FlowHub.Main.ViewModels.Debts"
             x:DataType="viewModels:UpSertDebtVM"             
             xmlns:converters="clr-namespace:FlowHub.Main.Utilities"
             Title="Flow Hold Details">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    
    <VerticalStackLayout Margin="8">
        <input:FormView Spacing="5" SubmitCommand="{Binding UpSertDebtCommand}">
            <input:FormView.Resources>
                <ResourceDictionary>
                    <Style TargetType="material:TextField">
                        <Setter Property="BorderColor" Value="DarkSlateBlue"/>
                    </Style>
                    <Style TargetType="material:EditorField">
                        <Setter Property="BorderColor" Value="DarkSlateBlue"/>
                    </Style>
                    <Style TargetType="material:DatePickerField">
                        <Setter Property="BorderColor" Value="DarkSlateBlue"/>
                    </Style>
                    <Style TargetType="material:PickerField">
                        <Setter Property="BorderColor" Value="DarkSlateBlue"/>
                    </Style>
                </ResourceDictionary>
            </input:FormView.Resources>

            <HorizontalStackLayout Spacing="7" HorizontalOptions="Center">
                <material:RadioButton Text="Lend" IsChecked="{Binding IsLent}" x:Name="IsLentRBtn"                                      
                                      CircleColor="{AppThemeBinding Light=darkslateblue, Dark=white}"
                                      TextColor="{AppThemeBinding Light=black, Dark=white}"/>
                
                <material:RadioButton Text="Borrow" x:Name="IsBorrowedRBtn"
                                      IsChecked="{Binding IsBorrow}"
<<<<<<< Updated upstream
                                      CircleColor="{AppThemeBinding Light=darkslateblue}"
                                      TextColor="{AppThemeBinding Light=black, Dark=white}"/>
=======
                                      CircleColor="{AppThemeBinding Light=darkslateblue, Dark=white}"
                                      TextColor="{AppThemeBinding Light=black, Dark=white}"/>                
>>>>>>> Stashed changes
            </HorizontalStackLayout>
            
            <Grid ColumnSpacing="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <material:TextField Grid.Column="0" Title="Amount" x:Name="AmountTextField"
                                    Text="{Binding SingleDebtDetails.Amount}" Focused="TextField_Focused"
                                    Keyboard="Numeric">
                    <validation:RequiredValidation Message=""/>                    
                    <validation:MinValueValidation MinValue="0.1"/>
                </material:TextField>
                <Label Grid.Column="1" FontSize="14"
                       FontAttributes="Bold"
                       VerticalTextAlignment="Center"
                       Text="{Binding SingleDebtDetails.Currency}"/>
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
<<<<<<< Updated upstream
                </Grid.ColumnDefinitions>                
                    
                <material:TextField x:Name="PersonName" Text="{Binding SingleDebtDetails.PersonOrOrganization.Name}">
=======
                </Grid.ColumnDefinitions>
                
                    <material:TextField x:Name="PersonName" Text="{Binding SingleDebtDetails.PersonOrOrganization.Name}">
>>>>>>> Stashed changes
                        <validation:RequiredValidation/>
                        <material:TextField.Triggers>
                            <DataTrigger TargetType="material:TextField" 
                                         Binding="{Binding IsLent}" Value="true">
                                <Setter Property="Title" Value="Lend To"/>
                            </DataTrigger>
                            <DataTrigger TargetType="material:TextField"
                                         Binding="{Binding IsLent}" Value="false">
                                <Setter Property="Title" Value="Borrow From"/>
                            </DataTrigger>
                        </material:TextField.Triggers>
                    </material:TextField>

                <ImageButton Grid.Column="1" Source="{AppThemeBinding Dark=user_icon_d, Light=user_icon_l}"                             
                             Clicked="ImageButton_Clicked"/>
            </Grid>
<<<<<<< Updated upstream
            <material:AutoCompleteTextField ItemsSource="{Binding ListOfPersonsNames}" IsVisible="false"
                                            Text="{Binding SingleDebtDetails.PersonOrOrganization.Name}"
                                            AllowClear="True" >
            </material:AutoCompleteTextField>
            <material:TextField Title="Contact"
=======
            <material:TextField Title="Contact" IsTextPredictionEnabled="True"
>>>>>>> Stashed changes
                                Text="{Binding SingleDebtDetails.PersonOrOrganization.PhoneNumber}"
                                x:Name="PersonNumber"/>

            <material:EditorField Title="Note*"
                                  Text="{Binding SingleDebtDetails.Notes}">
                
            </material:EditorField>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <HorizontalStackLayout Grid.Column="0" Margin="6,0">
                    <Label Text="Deadline" VerticalTextAlignment="Center"/>
                    <Switch OnColor="DarkSlateBlue" ThumbColor="{AppThemeBinding Dark=white, Light=gray}"                             
                            x:Name="DeadlineSwitch"
                            IsToggled="{Binding HasDeadLine}">

                    </Switch>
                </HorizontalStackLayout>
                
                <material:DatePickerField Grid.Column="1" Title="Deadline" MinimumDate="01/01/2022"
                                          IsVisible="{Binding IsToggled, Source={x:Reference DeadlineSwitch}}"
                                          Date="{Binding SingleDebtDetails.Deadline, StringFormat='{0:MMMM dd, yyyy}'}"
                                          TextColor="{AppThemeBinding Dark=white, Light=black}" TitleColor="{AppThemeBinding Light=black, Dark=white}"/>
            </Grid>

            <Button Text="Save" WidthRequest="80" HorizontalOptions="Center" 
                    input:FormView.IsSubmitButton="True"
                    />
            <VerticalStackLayout>
                
            </VerticalStackLayout>
        </input:FormView>
    </VerticalStackLayout>
</ContentPage>