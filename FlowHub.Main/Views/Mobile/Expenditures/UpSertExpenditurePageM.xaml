<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="FlowHub.Main.Views.Mobile.Expenditures.UpSertExpenditurePageM"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:models="clr-namespace:FlowHub.Models;assembly=FlowHub.Models"
             xmlns:input="clr-namespace:InputKit.Shared.Controls;assembly=InputKit.Maui"
             xmlns:validation="clr-namespace:InputKit.Shared.Validations;assembly=InputKit.Maui"
             xmlns:material="clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material"
             xmlns:viewModels="clr-namespace:FlowHub.Main.ViewModels.Expenditures"             
             x:DataType="viewModels:UpSertExpenditureVM"             
             Title="{Binding PageTitle}"
             x:Name="page">

    <toolkit:DockLayout>
        <VerticalStackLayout toolkit:DockLayout.DockPosition="Top" Spacing="5">
            <Label HorizontalOptions="End" Margin="5,0" FontAttributes="Italic"
                   TextColor="AliceBlue">
                <Label.Text>
                    <MultiBinding StringFormat="{} Resulting Balance : {0:n2} {1}">
                        <Binding Path="ResultingBalance"/>
                        <Binding Path="ActiveUser.UserCurrency"/>
                    </MultiBinding>
                </Label.Text>
            </Label>
            <Label HorizontalOptions="End" Margin="5,0" FontAttributes="Italic" FontSize="13"
                                TextColor="AliceBlue">
                <Label.Text>
                    <MultiBinding StringFormat="{} Flow Out's Amount : {0:n2} {1}">
                        <Binding Path="TotalAmountSpent"/>
                        <Binding Path="ActiveUser.UserCurrency"/>
                    </MultiBinding>
                </Label.Text>
            </Label>
        </VerticalStackLayout>
        <HorizontalStackLayout toolkit:DockLayout.DockPosition="Bottom"
                    HorizontalOptions="Center" Margin="5">
            
            <ImageButton Command="{Binding CancelBtnCommand}" IsVisible="false"
                                    Source="{AppThemeBinding Dark=cancel_icon_d.png, Light=cancel_icon_l.png}" />
        </HorizontalStackLayout>

        <input:FormView Spacing="15" 
                        Margin="10"
                        SubmitCommand="{Binding UpSertExpenditureCommand}">
            <VerticalStackLayout Spacing="5">
                <material:DatePickerField Title="Date Spent" MinimumDate="01/01/2022" 
                            MaximumDate="{Binding Source={x:Static sys:DateTime.Now}, StringFormat='{0:MMMM dd, yyyy}'}"
                            Date="{Binding SingleExpenditureDetails.DateSpent}"
                            TextColor="{AppThemeBinding Light=black, Dark=white}">
                    <material:DatePickerField.Validations>
                        <validation:RequiredValidation/>
                    </material:DatePickerField.Validations>
                </material:DatePickerField>

            </VerticalStackLayout>

            <Grid ColumnDefinitions="280,10*">

                <material:TextField Grid.Column="0" Title="Unit Price"
                                    x:Name="UnitPrice" Focused="UnitPrice_Focused"
                                    TextChanged="UnitPriceOrQty_TextChanged"
                                    Text="{Binding SingleExpenditureDetails.UnitPrice}" Keyboard="Numeric">
                    <material:TextField.Validations>
                        <validation:RequiredValidation/>
                        <validation:MinValueValidation MinValue="0.1" Message="The Unit Price cannot be 0 or Less"/>
                        <validation:NumericValidation/>
                    </material:TextField.Validations>
                </material:TextField>

                <material:TextField Grid.Column="1" Title="Quantity"
                                    x:Name="Qty"
                                    TextChanged="UnitPriceOrQty_TextChanged"
                                    Text="{Binding SingleExpenditureDetails.Quantity}"  Keyboard="Numeric" >
                    <material:TextField.Validations>
                        <validation:RequiredValidation/>
                        <validation:MinValueValidation MinValue="1" Message="The Quantity cannot be 0 or Less"/>
                        <validation:NumericValidation/>
                    </material:TextField.Validations>
                </material:TextField>
            </Grid>
            <material:EditorField Title="Reason" Text="{Binding SingleExpenditureDetails.Reason}">
                <material:EditorField.Validations>
                    <validation:RequiredValidation/>
                </material:EditorField.Validations>
            </material:EditorField>

            <material:CheckBox Text="Taxes" BorderColor="Gray" Margin="5,0,10,0" IsChecked="{Binding IsAddTaxesChecked}" x:Name="AddTaxCheckBox" CheckChanged="AddTax_CheckChanged"/>
            
            <ListView ItemsSource="{Binding ActiveUser.Taxes}" IsVisible="{Binding IsAddTaxesChecked}" x:Name="TaxesList">
                <ListView.ItemTemplate >
                    <DataTemplate x:DataType="models:TaxModel">
                        <ViewCell>
                            <material:CheckBox BorderColor="Gray" Margin="0,2" IsChecked="{Binding IsChecked}" CheckChanged="TaxCheckbox_CheckChanged">
                                <material:CheckBox.Text>
                                    <MultiBinding StringFormat="{} {0} : {1} %">
                                        <Binding Path="Name"/>
                                        <Binding Path="Rate"/>
                                    </MultiBinding>
                                </material:CheckBox.Text>
                            </material:CheckBox>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        
            <ImageButton Source="{AppThemeBinding Dark=save_icon_d, Light=save_icon_l}" input:FormView.IsSubmitButton="True"/>
            

        </input:FormView>

        
    </toolkit:DockLayout>
</ContentPage>