<?xml version="1.0" encoding="utf-8" ?>
<mct:Popup xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="FlowHub.Main.Views.Desktop.Debts.UpSertDebtPopUp"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
            xmlns:mct="clr-namespace:CommunityToolkit.Maui.Views;assembly=CommunityToolkit.Maui"
            xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
            xmlns:validation="clr-namespace:InputKit.Shared.Validations;assembly=InputKit.Maui"  
            xmlns:material="clr-namespace:UraniumUI.Material.Controls;assembly=UraniumUI.Material"
            xmlns:input="clr-namespace:InputKit.Shared.Controls;assembly=InputKit.Maui"
            xmlns:models="clr-namespace:FlowHub.Models;assembly=FlowHub.Models"
            xmlns:viewModels="clr-namespace:FlowHub.Main.ViewModels.Debts"
            x:DataType="viewModels:UpSertDebtVM" 
            CanBeDismissedByTappingOutsideOfPopup="False"
            xmlns:utilities="clr-namespace:FlowHub.Main.Utilities"
            Color="Transparent"
            Size="450,420"
            x:Name="page">
    <Border Margin="13,10" 
             Stroke="{AppThemeBinding Dark=#0E131A, Light=#CBCBCB}"
             StrokeThickness="0" StrokeShape="RoundRectangle 12"
             BackgroundColor="{AppThemeBinding Dark=#0E131A, Light=#CBCBCB}">
        <input:FormView Spacing="5" SubmitCommand="{Binding UpSertDebtCommand}" Margin="10,10,10,5">
            <HorizontalStackLayout Spacing="7" HorizontalOptions="Center">
                <material:RadioButton Text="Lend" IsChecked="{Binding IsLent}" x:Name="IsLentRBtn"                                      
              CircleColor="{AppThemeBinding Light=darkslateblue}"
              TextColor="{AppThemeBinding Light=black, Dark=white}"/>

            <material:RadioButton Text="Borrow" x:Name="IsBorrowedRBtn"
              IsChecked="{Binding IsBorrow}"
              CircleColor="{AppThemeBinding Light=darkslateblue}"
              TextColor="{AppThemeBinding Light=black, Dark=white}"/>
            </HorizontalStackLayout>

            <Grid ColumnSpacing="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <material:TextField Grid.Column="0" Title="Amount" x:Name="AmountTextField"
                    Text="{Binding SingleDebtDetails.Amount}" 
                    Keyboard="Numeric">
                    <validation:RequiredValidation Message=""/>
                    <validation:MinValueValidation MinValue="0.1"/>
                </material:TextField>
                <Label Grid.Column="1" FontSize="18"
                    FontAttributes="Bold"
                    VerticalTextAlignment="Center"
                    Text="{Binding SingleDebtDetails.Currency}"/>
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <material:TextField x:Name="PersonName" Text="{Binding SingleDebtDetails.PersonOrOrganization.Name}">
                    <validation:RequiredValidation/>
                    <material:TextField.Triggers>
                        <DataTrigger TargetType="material:TextField"
                 Binding="{Binding IsLent}" Value="true">
                            <Setter Property="Title" Value="Lend To"/>
                        </DataTrigger>
                        <DataTrigger TargetType="material:TextField"
                 Binding="{Binding IsLent}" Value="false">
                            <Setter Property="Title" Value="Borrow From"/>
                        </DataTrigger>
                    </material:TextField.Triggers>
                </material:TextField>

                <ImageButton Grid.Column="1" Source="{AppThemeBinding Dark=user_icon_d, Light=user_icon_l}"/>
            </Grid>
            <material:AutoCompleteTextField ItemsSource="{Binding ListOfPersonsNames}" IsVisible="false"
                    Text="{Binding SingleDebtDetails.PersonOrOrganization.Name}"
                    AllowClear="True" >
            </material:AutoCompleteTextField>
            <material:TextField Title="Contact"
                Text="{Binding SingleDebtDetails.PersonOrOrganization.PhoneNumber}"
                x:Name="PersonNumber"/>

            <material:EditorField Title="Notes*"
                    TextColor="{AppThemeBinding Light=black, Dark=white}"
                    Text="{Binding SingleDebtDetails.Notes}">

            </material:EditorField>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <HorizontalStackLayout Grid.Column="0" Margin="6,0">
                    <Label Text="Deadline" VerticalTextAlignment="Center"/>
                    <Switch OnColor="DarkSlateBlue" ThumbColor="{AppThemeBinding Dark=white, Light=gray}"                             
            x:Name="DeadlineSwitch"
            IsToggled="{Binding HasDeadLine}"/>


                </HorizontalStackLayout>

                <material:DatePickerField Grid.Column="1" Title="Deadline" MinimumDate="01/01/2022"
                  IsVisible="{Binding IsToggled, Source={x:Reference DeadlineSwitch}}"
                  Date="{Binding SingleDebtDetails.Deadline, StringFormat='{0:MMMM dd, yyyy}'}"
                  TextColor="{AppThemeBinding Dark=white, Light=black}" TitleColor="{AppThemeBinding Light=black}"/>
            </Grid>

            <HorizontalStackLayout HorizontalOptions="Center" Margin="0,15,0,0" Spacing="15">
                <Button input:FormView.IsSubmitButton="True"
                            Text="Save Flow Hold" BackgroundColor="{StaticResource SaveBtnColor}" TextColor="White" 
                            FontSize="20" FontAttributes="Bold"/>

                <Button Command="{Binding CancelBtnCommand}"
                            Text="Cancel" BackgroundColor="{StaticResource NegativeActionBtnDark}" TextColor="White"
                            FontSize="16" />

            </HorizontalStackLayout>
            <VerticalStackLayout>

            </VerticalStackLayout>
        </input:FormView>
    </Border>
</mct:Popup>